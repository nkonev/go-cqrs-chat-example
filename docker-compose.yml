services:

  kafka:
    image: apache/kafka:4.0.0
    # image: huecker.io/apache/kafka:3.7.0
    restart: unless-stopped
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:29092,PLAINTEXT_HOST://127.0.0.1:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'INTERNAL://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'

    volumes:
      - kafka_data:/var/lib/kafka:z

  postgresql:
    image: postgres:17.0-alpine3.20
    restart: unless-stopped
    container_name: postgresql
    hostname: postgresql
    ports:
      - 5432:5432
    volumes:
      - ./docker/postgresql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:z
      - postgres_data:/var/lib/postgresql/data:z
    environment:
      - POSTGRES_PASSWORD=postgresqlPassword

  jaeger:
    image: jaegertracing/all-in-one:1.58.1
    hostname: jaeger
    container_name: jaeger
    restart: unless-stopped
    ports:
      # https://www.jaegertracing.io/docs/1.54/deployment/
      - 4317:4317 # OTLP GRPC (other microservices)
      - 16686:16686 # web ui
    environment:
      - QUERY_BASE_PATH=/jaeger
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "1"
    command:
      - --memory.max-traces=100000

volumes:
  kafka_data:
  postgres_data:
